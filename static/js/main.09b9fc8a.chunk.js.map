{"version":3,"sources":["logo.svg","components/navbar/index.js","components/post/index.js","components/posts/index.js","components/details/index.js","App.js","reportWebVitals.js","index.js"],"names":["SearchBar","sendData","search","useRef","className","to","xmlns","fill","viewBox","stroke","d","onChange","current","value","ref","id","type","name","placeholder","Post","title","text","class","Posts","props","this","posts","length","map","data","body","Component","Details","state","match","params","postData","comments","fetch","then","response","json","setState","filter","item","postId","App","includes","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sSAAe,I,2BCuBAA,EApBG,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SACVC,EAASC,iBAAO,IAItB,OACI,sBAAKC,UAAU,+CAAf,UACI,cAAC,IAAD,CAAMC,GAAG,QAAT,SAAiB,4CACrB,sBAAKD,UAAU,0CAAf,UACI,qBAAKE,MAAM,6BAA6BF,UAAU,+BAA+BG,KAAK,OAAOC,QAAQ,YACjGC,OAAO,eADX,SAEI,sBAAM,iBAAe,QAAQ,kBAAgB,QAAQ,eAAa,IAC9DC,EAAE,kDAEV,uBAAOC,SAZO,WAClBV,EAASC,EAAOU,QAAQC,QAWaC,IAAKZ,EAAQa,GAAG,SAASC,KAAK,OAAOC,KAAK,OAAOC,YAAY,eAC1Fd,UAAU,uFCwBXe,G,MAvCF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,KAAMN,EAAQ,EAARA,GACxB,OACI,qBAAKO,MAAM,uFAAX,SACG,cAAC,IAAD,CAAMjB,GAAE,gBAAWU,GAAnB,SACJ,qBAAKO,MAAM,6BAAX,SACC,sBAAKA,MAAM,GAAX,UACC,qBAAKA,MAAM,oCAAX,SACG,oBAAKA,MAAM,4CAAX,SAAwDF,MAG3D,mBAAGE,MAAM,uCAAT,SACGD,IAEH,sBAAKC,MAAM,yBAAX,UACG,sBAAKA,MAAM,uCAAX,UACG,qBAAKf,KAAK,OAAOC,QAAQ,YAAac,MAAM,oBAAoBb,OAAO,eAAvE,SACG,sBAAM,iBAAe,QAAQ,kBAAgB,QAAQ,eAAa,IAAIC,EAAE,kIAE3E,yCAEH,sBAAKY,MAAM,uCAAX,UACG,qBAAKf,KAAK,OAAOC,QAAQ,YAAYc,MAAM,4BAA4Bb,OAAO,eAA9E,SACG,sBAAM,iBAAe,QAAQ,kBAAgB,QAAQ,eAAa,IAAIC,EAAE,oKAE3E,wCAEH,sBAAKY,MAAM,uCAAX,UACG,qBAAKf,KAAK,OAAOC,QAAQ,YAAYc,MAAM,qBAAqBb,OAAO,eAAvE,SACG,sBAAM,iBAAe,QAAQ,kBAAgB,QAAQ,eAAa,IAAIC,EAAE,qEAE3E,0D,OCVAa,E,kDAlBX,WAAYC,GAAQ,uCACVA,G,0CAGV,WACI,OACI,8BACKC,KAAKD,MAAME,MAAMC,OAASF,KAAKD,MAAME,MAAME,KAAI,SAAAC,GAC5C,OAEI,cAAC,EAAD,CAAMT,MAAOS,EAAKT,MAAOC,KAAMQ,EAAKC,KAAOf,GAAIc,EAAKd,QAGvD,S,GAdDgB,aCwCLC,G,wDAzCX,WAAYR,GAAO,IAAD,8BACd,cAAMA,IACDS,MAAQ,CACTlB,GAAI,EAAKS,MAAMU,MAAMC,OAAOpB,GAC5BqB,SAAU,GACVC,SAAU,IALA,E,qDAQlB,WAAoB,IAAD,OACfC,MAAM,8CAAD,OAA+Cb,KAAKQ,MAAMlB,KAC9DwB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAV,GAAI,OAAI,EAAKa,SAAS,CAACN,SAAUP,OACvCS,MAAM,kDACFC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAV,GACA,IAAMQ,EAAaR,EAAKc,QAAO,SAAAC,GAAI,OAAIA,EAAKC,QAAU,EAAKZ,MAAMlB,MACjE,EAAK2B,SAAS,CAACL,SAASA,S,oBAGrC,WACI,OACI,sBAAKtB,GAAG,OAAOX,UAAU,yCAAzB,UACI,0BAASW,GAAG,eAAeX,UAAU,oDAArC,UACA,oBAAKkB,MAAM,4CAAX,SAAwDG,KAAKQ,MAAMG,SAAShB,QAC5E,mBAAGE,MAAM,uCAAT,SAAkDG,KAAKQ,MAAMG,SAASN,UAEtE,0BAASf,GAAG,WAAWX,UAAU,iBAAjC,UACI,6BAAI,2CACJ,6BACKqB,KAAKQ,MAAMI,SAASV,OAAS,EAAIF,KAAKQ,MAAMI,SAAST,KAAI,SAAAgB,GAAI,OACpD,sBAAKxC,UAAU,UAAf,UACI,mBAAGA,UAAU,OAAb,SAAqBwC,EAAKd,OAC5B,qBAAI1B,UAAU,OAAd,kBAA2BwC,EAAK3B,cAEvC,e,GAnCPc,cCqCPe,E,kDA9Bb,WAAYtB,GAAQ,IAAD,8BACjB,cAAMA,IACDS,MAAQ,CACXP,MAAO,GACPG,KAAM,GACN3B,OAAQ,IALO,E,qDAQnB,WAAqB,IAAD,OAClBoC,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAV,GAAI,OAAI,EAAKa,SAAS,CAAEhB,MAAM,YAAKG,GAAOA,KAAK,YAAKA,U,oBAG9D,WAAU,IAAD,OACP,OACE,eAAC,IAAD,WACE,cAAC,EAAD,CAAW5B,SAAU,SAAC4B,GAAD,OAAU,EAAKa,SAAS,CAAExC,OAAQ2B,IAAQ,WAC7D,IAAMc,EAAS,EAAKV,MAAMJ,KAAKc,QAAO,SAAAd,GAAI,OAAIA,EAAKT,MAAM2B,SAAS,EAAKd,MAAM/B,WAC7E,EAAKwC,SAAS,CAAEhB,MAAOiB,UAEzB,eAAC,IAAD,WACE,cAAC,IAAD,CAAOK,KAAK,QAAQC,OAAK,EAACC,UAAW,kBAAM,cAAC,EAAD,CAAOxB,MAAO,EAAKO,MAAMP,WACpE,cAAC,IAAD,CAAOsB,KAAK,YAAYE,UAAWlB,c,GAxB3BD,aCIHoB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.09b9fc8a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useEffect, useRef } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./app.css\"\r\nconst SearchBar = ({sendData}) => {\r\n    const search = useRef(\"\");\r\n    const searchHandler = () => {\r\n        sendData(search.current.value)\r\n    }\r\n    return (\r\n        <nav className=\"navbar py-3 flex justify-center items-center\">\r\n            <Link to=\"/post\"><b>All Posts</b></Link>\r\n        <div className=\"w-3/6 flex items-center justify-center \">\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"w-6 h-6 mr-2 text-yellow-600\" fill=\"none\" viewBox=\"0 0 24 24\"\r\n                stroke=\"currentColor\">\r\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\r\n                    d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" />\r\n            </svg>\r\n            <input onChange={searchHandler}  ref={search} id=\"search\" type=\"text\" name=\"name\" placeholder=\"Search Posts\"\r\n                className=\"w-5/6 py-2 border-b-2 border-yellow-400 outline-none focus:border-green-400\" />\r\n        </div>\r\n        </nav>\r\n    )\r\n}\r\nexport default SearchBar;","import React from \"react\";\r\nimport \"./app.css\"\r\nimport {Link} from \"react-router-dom\"\r\nconst Post = ({title, text, id}) => {\r\n    return(\r\n        <div class=\"post flex  bg-white shadow-md rounded-lg mx-4 md:mx-auto my-8 max-w-md md:max-w-2xl \">\r\n           <Link to={`/post/${id}`}>\r\n       <div class=\"flex items-start px-4 py-6\">\r\n        <div class=\"\">\r\n         <div class=\"flex items-center justify-between\">\r\n            <h2  class=\"text-lg font-semibold text-gray-900 -mt-1\">{title}</h2>\r\n         </div>\r\n         \r\n         <p class=\"mt-3 text-gray-700 text-sm text-left\" >\r\n           {text}\r\n         </p>\r\n         <div class=\"mt-4 flex items-center\">\r\n            <div class=\"flex mr-2 text-gray-700 text-sm mr-3\">\r\n               <svg fill=\"none\" viewBox=\"0 0 24 24\"  class=\"like w-4 h-4 mr-1\" stroke=\"currentColor\">\r\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z\"/>\r\n                </svg>\r\n               <span>12</span>\r\n            </div>\r\n            <div class=\"flex mr-2 text-gray-700 text-sm mr-8\">\r\n               <svg fill=\"none\" viewBox=\"0 0 24 24\" class=\"comment-logo w-4 h-4 mr-1\" stroke=\"currentColor\">\r\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M17 8h2a2 2 0 012 2v6a2 2 0 01-2 2h-2v4l-4-4H9a1.994 1.994 0 01-1.414-.586m0 0L11 14h4a2 2 0 002-2V6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2v4l.586-.586z\"/>\r\n               </svg>\r\n               <span>8</span>\r\n            </div>\r\n            <div class=\"flex mr-2 text-gray-700 text-sm mr-4\">\r\n               <svg fill=\"none\" viewBox=\"0 0 24 24\" class=\"share w-4 h-4 mr-1\" stroke=\"currentColor\">\r\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-8l-4-4m0 0L8 8m4-4v12\"/>\r\n                </svg>\r\n               <span>share</span>\r\n            </div>\r\n         </div>\r\n      </div>\r\n   </div>\r\n   </Link>\r\n</div>\r\n    )\r\n}\r\nexport default Post;","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Post from \"../post\";\r\n\r\nclass Posts extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n   \r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props.posts.length ? this.props.posts.map(data => {\r\n                    return (\r\n                        \r\n                        <Post title={data.title} text={data.body}  id={data.id}></Post>\r\n                        \r\n                    )\r\n                }) : \"\"}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Posts;","import React, { Component } from \"react\";\r\nimport \"./app.css\"\r\nclass Details extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            id: this.props.match.params.id,\r\n            postData: [],\r\n            comments: []\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        fetch(`https://jsonplaceholder.typicode.com/posts/${this.state.id}`)\r\n        .then(response => response.json())\r\n        .then(data => this.setState({postData: data}));\r\n        fetch(\"https://jsonplaceholder.typicode.com/comments/\")\r\n           .then(response => response.json())\r\n           .then(data => {\r\n                 const comments  =  data.filter(item => item.postId == this.state.id)\r\n                 this.setState({comments:comments})\r\n            });\r\n    }\r\n    render(){\r\n        return(\r\n            <div id=\"info\" className=\"pb-20 flex justify-center items-center\">\r\n                <article id=\"post-details\" className=\"rounded-md mr-5 p-4 flex flex-col justify-center \">\r\n                <h2  class=\"text-lg font-semibold text-gray-900 -mt-1\">{this.state.postData.title}</h2>\r\n                <p class=\"mt-3 text-gray-700 text-sm text-left\" >{this.state.postData.body}</p>\r\n                </article>\r\n                <article id=\"comments\" className=\"rounded-md p-4\">\r\n                    <h2><b>Comments</b></h2>\r\n                    <ul>\r\n                        {this.state.comments.length > 0 ? this.state.comments.map(item => (\r\n                                  <div className=\"comment\">\r\n                                      <p className=\"body\">{item.body}</p>\r\n                                    <h3 className=\"name\">by - {item.name}</h3>    \r\n                                  </div>\r\n                        )) : \"\"}\r\n                    </ul>\r\n                </article>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Details;","import logo from './logo.svg';\nimport './App.css';\nimport SearchBar from './components/navbar';\nimport Post from './components/post';\nimport { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\"\nimport Posts from './components/posts';\nimport Details from './components/details';\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      posts: [],\n      data: [],\n      search: \"\"\n    }\n  }\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/posts')\n      .then(response => response.json())\n      .then(data => this.setState({ posts: [...data], data: [...data] }));\n  }\n\n  render() {\n    return (\n      <BrowserRouter>\n        <SearchBar sendData={(data) => this.setState({ search: data }, () => {\n          const filter = this.state.data.filter(data => data.title.includes(this.state.search))\n          this.setState({ posts: filter })\n        })} />\n        <Switch>\n          <Route path=\"/post\" exact component={() => <Posts posts={this.state.posts}/>} />\n          <Route path=\"/post/:id\" component={Details} />\n        </Switch>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}